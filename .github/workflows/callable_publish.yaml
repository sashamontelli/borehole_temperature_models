name: "[impl] Publishes content previously built from this repository."

on:
  workflow_call:
    inputs:
      is_production: { type: boolean, description: "True if the script should publish to a production PyPi server, False to publish to a test server.", required: false, default: false }

jobs:
  Publish:
    strategy:
      matrix:
        # Note that we don't need to include the os as the packages produced do not contain binary content.
        os:
          # - macos-latest
          - ubuntu-latest
          # - windows-latest

        # Note that we only need to include a single python version for each major release as the package
        # does not depend on minor release information.
        python_version:
          # - "3.9"
          - "3.10"
          # - "3.11"

    name: "Publish: ${{ matrix.os }}_${{ matrix.python_version }}"
    runs-on: "${{ matrix.os }}"

    steps:
      # Ensure that windows machines support long paths
      - name: git Long File Path Support on Windows
        if: ${{ startsWith(matrix.os, 'windows') }}
        run: |-
          git config --system core.longpaths true

      - uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python_version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python_version }}

      - name: Download Package Artifacts
        uses: actions/download-artifact@v3
        with:
          name: package
          path: dist

      - name: Install Dependencies
        run: |-
          pip install -e ".[package]"

      - name: Publish to Test PyPi
        if: ${{ !inputs.is_production }}
        run: |-
          python Build.py Publish "${{ secrets.TEST_PYPI_API_TOKEN }}" --verbose

      - name: Publish to PyPi
        if: ${{ inputs.is_production }}
        run: |-
          python Build.py Publish "${{ secrets.PRODUCTION_PYPI_API_TOKEN }}" --verbose --production
